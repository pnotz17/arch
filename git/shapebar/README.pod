=head1 Shapebar

Shapebar - Simple bar based on Lemonbar.

=head1 SYNOPSIS

I<lemonbar> [-h | -g I<width>B<x>I<height>B<+>I<x>B<+>I<y> | -b | -d | -f I<font> | -p | -n I<name> | -u I<pixel> | -B I<color> | -F I<color> | -U I<color> | -o I<offset>  | -a I<arc points>]

=head1 DESCRIPTION

B<Shapebar> is based on B<lemonboy/bar> and B<krypt-n/bar> which provides the standard Lemonbar functionality along with Xft support.
Sharebar adds monitor cloning mode (-c), shape separators and removes clickable areas.

Shapebar is supposed to be a simple non interactive bar that only has functionality to display info.
I was annoyed by Polybar's many modules that need to be compiled. This explodes the scope of the program.
You just pipe in the text from bash. I barely changed the input method from the original Lemonbar.
When I used Polybar I wanted triangles drawn in the bar and did it very hacky by having a powerline font and using the triangle char at exactly the right size.
Shapebar adds shapes to draw in the backgound. They serve as separators. This is how Shapebar derives it's name.

=over

=item Monitor cloning mode is introduced to have an easy method of having the same bar everywhere for uniform sized monitors.

=item Clickable areas are removed because in my opinion bars should only display info and using the mouse is a big no in most cases.

=back

=head1 OPTIONS

=over

=item B<-h>

Display the help and exit.

=item B<-g> I<width>B<x>I<height>B<+>I<x>B<+>I<y>

Set the window geometry. If a parameter is omitted it's filled with the default value. If the I<y> parameter is specified along with the B<-b> switch then the position is relative to the bottom of the screen.

=item B<-b>

Dock the bar at the bottom of the screen.

=item B<-d>

Force docking without asking the window manager. This is needed if the window manager isn't EWMH compliant.

=item B<-c>

Copy the the pixelmap of the headmonitor (the first one) to all others and ignores %{S} blocks. Only Suitable for uniform sized monitors.
Light and fast.
No error checking included.
If you have non uniform sized monitors it is undefined behaviour.
If this does not work in your situation, use %{S} blocks to get your string across monitors.

=item B<-f> I<font>

Define the font to load into one of the five slots (the number of slots is hardcoded and can be tweaked by
changing the MAX_FONT_COUNT parameter in the source code). This version supports fontconfig font specifiers and anti-aliased fonts.

=item B<-p>

Make the bar permanent, don't exit after the standard input is closed.

=item B<-n> I<name>

Set the WM_NAME atom value for the bar.

=item B<-u> I<pixel>

Sets the underline width in pixels. The default is 1.

=item B<-B> I<color>

Set the background color of the bar. I<color> must be specified in the hex format (#aarrggbb, #rrggbb, #rgb). If no compositor such as compton or xcompmgr is running the alpha channel is silently ignored.

=item B<-F> I<color>

Set the foreground color of the bar. Accepts the same color formats as B<-B>.

=item B<-o> I<offset>

Add a vertical offset to the text. I<offset> must be a number and can be negative. I<-o -3> will push the text 3 pixels up.

=item B<-U> I<color>

Set the underline color of the bar. Accepts the same color formats as B<-B>.

=item B<-a> I<arc points>

set the number of points in the curved part of the arc, hemisphere and sigmoid separator. Must be a non-negative integer.

=back

=head1 FORMATTING

lemonbar provides a screenrc-inspired formatting syntax to allow full customization at runtime. Every formatting block is opened with C<%{> and closed by C<}> and accepts the following commands, the parser tries its best to handle malformed input. Use C<%%> to get a literal percent sign (C<%>).

=over

=item B<R>

Swap the current background and foreground colors.

=item B<l>

Aligns the following text to the left side of the screen.

=item B<c>

Aligns the following text to the center of the screen.

=item B<r>

Aligns the following text to the right side of the screen.

=item B<O>I<width>

Offset the current position by I<width> pixels in the alignment direction.

=item B<B>I<color>

Set the text background color. The parameter I<color> can be I<-> or a color in one of the formats mentioned before. The special value I<-> resets the color to the default one.

=item B<F>I<color>

Set the text foreground color. The parameter I<color> can be I<-> or a color in one of the formats mentioned before. The special value I<-> resets the color to the default one.

=item B<T>I<index>

Set the font used to draw the following text. The parameter I<index> can either be I<-> or the 1-based index of the slot which contains the desired font. If the parameter is I<-> lemonbar resets to the normal behavior (matching the first font that can be used for the character). If the selected font can't be used to draw a character, lemonbar will fall back to normal behavior for that character

=item B<U>I<color>

Set the text underline color. The parameter I<color> can be I<-> or a color in one of the formats mentioned before. The special value I<-> resets the color to the default one.

=item B<S>I<dir>

Change the monitor the bar is rendered to. I<dir> can be either

=over

=item B<+>/B<->

Next/previous monitor.

=item B<f>/B<l>

First/last monitor.

=item I<0-9>

Nth monitor.

=back

=back

B<Attribute modifiers>

=over

=item B<+>I<attribute>

Set the attribute I<attribute> for the following text.

=item B<->I<attribute>

Unset the attribute I<attribute> for the following text.

=item B<!>I<attribute>

Toggle the attribute I<attribute> for the following text.

=back

Where I<attribute> is one of the following

=over

=item B<o>

Draw a line over the text.

=item B<u>

Draw a line under the text.

=item B<Z>I<md>

Draw a separator. Use the format Z??. First char after the Z is the mode, which selects the separator. Second char is the direction.
Possible modes are t, T, a, s, h. t Draws a triangle with an horizontal and a vertical edge, T draws a triangle with a vertical edge.
a draws and arc and s draws a sigmoid. h draws a hemisphere. Possible directions are < and > for left and right.
For example Zt> Draws a triangle separator orientated to the right. Seperators respect the width, height, foreground and background colour formatting parameters.

=item B<W>

Sets the width parameter used for separators. The special value - sets the width parameter to the bar height.

=item B<H>

Sets the height parameter used for separators. The special value - sets the height parameter to the bar height.

=back

=head1 OUTPUT

Clicking on an area makes lemonbar output the command to stdout, followed by a newline, allowing the user to pipe it into a script, execute it or simply ignore it. Simple and powerful, that's it.

=head1 WWW

L<git repository|https://github.com/ocdy1001/shapebar>

=head1 AUTHOR

2012-2017 (C) The Lemon Man

2020 (C) Cody Bloemhard

Xinerama support was kindly contributed by Stebalien

RandR support was kindly contributed by jvvv
